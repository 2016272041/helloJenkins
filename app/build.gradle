apply plugin: 'com.android.application'

buildscript {

    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        jcenter()
    }

    dependencies {
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.13.0'
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.6.2'
        classpath 'com.dicedmelon.gradle:jacoco-android:0.1.1'
        //Uncomment to use genymotion
        classpath 'com.genymotion:plugin:1.3'
    }
}

//Version plugin task -> dependencyUpdates
apply plugin: 'com.github.ben-manes.versions'
//Method count
apply plugin: 'com.getkeepsafe.dexcount'
//Code Coverage
apply plugin: 'jacoco-android'
//Uncomment to use genymotion cloud
apply plugin: 'genymotion'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.greenlionsoft.hellojenkins"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            applicationIdSuffix = ".debug"
            versionNameSuffix = "-DEBUG"
        }
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.1.0'
    testCompile 'junit:junit:4.12'
}

//Version plugin task -> dependencyUpdates
//configures Gradle Versions plugin to list only release status versions
dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}

sonarqube {
    properties {
        property "sonar.jacoco.reportPath", "build/jacoco/testDebugUnitTest.exec"
        property "sonar.junit.reportsPath", "build/test-results/debug"
    }
}

jacoco {
    toolVersion = jacocoVersion
}

genymotion {

    //Comment block if you are not running it on Ubuntu or set your path
    config {
        genymotionPath = "/opt/genymobile/genymotion/"
    }

    cloudDevices {
        nexus5 {
            template "Google Nexus 5 - 4.4.4 - API 19 - 1080x1920"
        }
    }
}
